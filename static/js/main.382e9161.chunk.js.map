{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Container/Container.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","className","s","button","onClick","Section","title","children","Notification","message","propType","PropTypes","string","isRequired","Statistics","good","neutral","bad","total","persentage","data","Container","container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","totalSum","percentage","Math","round","isNaN","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAkBeA,EAdS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACtB,8BACGD,EAAQE,KAAI,SAACC,GACZ,OAAO,wBAAqBC,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAAS,kBAAMP,EAAgBE,IAAvF,SACNA,GADmBA,SCLX,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OAAO,gCACFD,GAAS,6BAAKA,IACdC,K,oCCFQ,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OAAO,mBAAGR,UAAWC,IAAEO,QAAhB,SAA0BA,IAGrCD,EAAaE,SAAW,CACpBD,QAASE,IAAUC,OAAOC,Y,oBCHf,SAASC,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAE9D,OACE,qCACA,oBAAGlB,UAAWC,IAAEkB,KAAhB,kBAA4BL,KAC5B,oBAAGd,UAAWC,IAAEkB,KAAhB,qBAA+BJ,KAC/B,oBAAGf,UAAWC,IAAEkB,KAAhB,kBAA4BH,KAC5B,oBAAGhB,UAAWC,IAAEgB,MAAhB,oBAA+BA,KAC/B,oBAAGjB,UAAWC,IAAEiB,WAAhB,gCAAgDA,EAAhD,U,oBCFWE,EANG,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAH,OAAkB,qBAAKN,UAAWC,IAAEoB,UAAlB,SAA8Bf,KCuEnDgB,MArEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAqBMC,EAAqB,WAEzB,OADsBb,EAAOC,EAAUC,GAcnCY,EAAWD,IACXT,EAXkC,WACtC,IAAMD,EAAQU,IACRE,EAAaC,KAAKC,MAAOjB,EAAOG,EAAS,KAE/C,OAAIe,MAAMH,GAAoB,EAErBC,KAAKC,MAAOjB,EAAOG,EAAS,KAKpBgB,GAEnB,OACE,cAAC,EAAD,UACE,gCACE,cAAC7B,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA3Cc,SAAAE,GACtB,OAAQA,GACN,IAAK,OACH0B,GAAQ,SAAAV,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHW,GAAW,SAAAV,GAAO,OAAIA,EAAU,KAChC,MAEF,IAAK,MACHW,GAAO,SAAAV,GAAG,OAAIA,EAAM,WAmCpB,cAACZ,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzBsB,IACC,cAACpB,EAAD,CAAcC,QAAQ,sBAEtB,cAACK,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,EACPV,WAAYA,YC7D1BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,kBCAjGD,EAAOC,QAAU,CAAC,OAAS,kC,sCCA3BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.382e9161.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n  <div>\r\n    {options.map((option) => {\r\n      return <button key={option} type=\"button\" className={s.button} onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </button> \r\n    })}    \r\n  </div>   \r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,  \r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n  </div>\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({message}) {\r\n    return <p className={s.message}>{message}</p>    \r\n}\r\n\r\nNotification.propType = {\r\n    message: PropTypes.string.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\n\r\nexport default function Statistics({ good, neutral, bad, total, persentage }) {   \r\n \r\n  return (   \r\n    <>      \r\n    <p className={s.data}>Good:{good}</p>         \r\n    <p className={s.data}>Neutral:{neutral}</p>\r\n    <p className={s.data}>Bad: {bad}</p>\r\n    <p className={s.total}>Total: {total}</p>\r\n    <p className={s.persentage}>Positive feedback: {persentage}%</p>        \r\n  </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    persentage: PropTypes.number.isRequired,\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nContainer.propTypes = {   \r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport default Container;","import { useState } from 'react';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Section from 'components/Section/Section';\nimport Notification from 'components/Notification/Notification';\nimport Statistics from 'components/Statistics/Statistics';\nimport Container from 'components/Container/Container';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = option => {\n    switch (option) {\n      case 'good':\n        setGood(good => good + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const percentage = Math.round((good / total) * 100);\n\n    if (isNaN(percentage)) return 0;\n    else {\n      return Math.round((good / total) * 100);\n    }\n  };\n\n  const totalSum = countTotalFeedback();\n  const persentage = countPositiveFeedbackPercentage();\n\n  return (\n    <Container>\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalSum}\n              persentage={persentage}\n            />\n          )}\n        </Section>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n//   static defaultProps = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   state = {\n//     good: this.props.good,\n//     neutral: this.props.neutral,\n//     bad: this.props.bad,\n//   };\n\n//   handleIncrement = option => {\n//     this.setState(state => {\n//       return { [option]: state[option] + 1 };\n//     });\n//   };\n\n//   countTotalFeedback() {\n//     const { good, neutral, bad } = this.state;\n//     const totalFeedback = good + neutral + bad;\n//     return totalFeedback;\n//   }\n\n//   countPositiveFeedbackPercentage() {\n//     const { good } = this.state;\n//     const total = this.countTotalFeedback();\n//     const percentage = Math.round((good / total) * 100);\n\n//     if (isNaN(percentage)) return 0;\n//     else {\n//       return Math.round((good / total) * 100);\n//     }\n//   }\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const totalSum = this.countTotalFeedback();\n//     const persentage = this.countPositiveFeedbackPercentage();\n//   return (\n//     <Container>\n//       <div>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={['good', 'neutral', 'bad']}\n//             onLeaveFeedback={this.handleIncrement}\n//           />\n//         </Section>\n//           <Section title=\"Statistics\">\n//           {totalSum === 0 ? (\n//             <Notification message=\"No feedback given\"></Notification>\n//           ) : (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={totalSum}\n//               persentage={persentage}\n//             />\n//           )}\n//         </Section>\n//       </div>\n//     </Container>\n//   );\n// }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"Statistics_data__3OXnx\",\"total\":\"Statistics_total__2K9kU\",\"persentage\":\"Statistics_persentage__2BrAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__10lvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2AGAH\"};"],"sourceRoot":""}